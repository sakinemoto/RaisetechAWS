AWSTemplateFormatVersion: "2010-09-09"
Description: Lecture10 Assignment

Parameters:
  DBPassword:
    Type: String
    Description: The database admin password
    NoEcho: true

Resources:
  # VPC
  MyVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
           - Key: Name
             Value: VPC-Lec10

  # インターネットゲートウェイ
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
           - Key: Name
             Value: IGW-Lec10


  # IGWをVPCにアタッチ
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref MyVPC
      InternetGatewayId: !Ref InternetGateway

  # パブリックサブネット1
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: ap-northeast-1a
      MapPublicIpOnLaunch: true
      Tags:
           - Value: Name
             Key: Pub-subnet-1-Lec10

  # プライベートサブネット1
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: 10.0.2.0/24
      AvailabilityZone: ap-northeast-1a
      Tags:
           - Value: Name
             Key: Pvt-subnet-1-Lec10

  # パブリックサブネット2
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: 10.0.3.0/24
      AvailabilityZone: ap-northeast-1c
      MapPublicIpOnLaunch: true
      Tags:
           - Value: Name
             Key: Pub-subnet-2-Lec10

  # プライベートサブネット2
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: 10.0.4.0/24
      AvailabilityZone: ap-northeast-1c
      Tags:
           - Value: Name
             Key: Pvt-subnet-2-Lec10

  # RDS用のカスタムサブネットグループ
  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: MyDB subnetGroup
      SubnetIds:
        - !Ref PrivateSubnet1
        - !Ref PrivateSubnet2

  # EC2用のセキュリティグループ
  EC2SecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow SSH and HTTP access to EC2
      VpcId: !Ref MyVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      Tags:
           - Value: Name
             Key: EC2-SG-Lec10

  # RDS用のセキュリティグループ
  RdsSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow MySQL to RDS from EC2
      VpcId: !Ref MyVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          SourceSecurityGroupId: !Ref EC2SecGroup
      Tags:
           - Value: Name
             Key: RDS-EC2-SG-Lec10

  # ALB用のセキュリティグループ
  AlbSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow HTTP and access to ALB
      VpcId: !Ref MyVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      Tags:
           - Value: Name
             Key: ALB-SG-Lec10


  # パブリックサブネット1 のルートテーブル作成
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MyVPC
      Tags:
           - Key: Name
             Value: RouteTable-PubSubnet1-Lec10

  # パブリックルートテ-ブルの設定
  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  # パブリックルートテーブルをパブリックサブネット1に紐付ける
  PublicRouteAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable

  # プライベートサブネット１のルートテーブル作成
  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MyVPC
      Tags:
           - Key: Name
             Value: RouteTable-PvtSubnet1-Lec10

  # プライベートルートテーブルをプライベートサブネット1に紐づける
  PrivateRouteTableAssocName:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1
      RouteTableId: !Ref PrivateRouteTable1

  # ALB
  MyALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internet-facing
      SecurityGroups: 
        - !Ref AlbSecGroup
      Subnets: 
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2
      Type: application
      Name: ALB-Lec10

  # ALBのターゲットグループ
  MytargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Port: 80
      Protocol: HTTP
      ProtocolVersion: HTTP1
      TargetType: instance
      UnhealthyThresholdCount: 2
      VpcId: !Ref MyVPC
      Name: TargetGroup-Lec10

  # ALB リスナー設定
  MyALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions: 
        - Type: forward
          TargetGroupArn: !Ref MytargetGroup
      LoadBalancerArn: !Ref MyALB
      Port: 80
      Protocol: HTTP

  #キーペア作成
  MyKeyPair:
    Type: AWS::EC2::KeyPair
    Properties: 
      KeyName: MyKeyPair


  #EC2インスタンス
  MyEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      KeyName: !Ref MyKeyPair
      ImageId: ami-0df2ca8a354185e1e
      InstanceType: t2.micro
      SecurityGroupIds:
        - !Ref EC2SecGroup
      SubnetId: !Ref PublicSubnet1
      IamInstanceProfile: !Ref MyInstanceProfile
      Tags:
           - Value: Name
             Key: EC2-Lec10

  #mySQLのRDB作成
  MyRdsDBInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: 20
      DBInstanceClass: db.t3.micro
      AvailabilityZone: ap-northeast-1a
      DBName: mydatabase
      Engine: mysql
      EngineVersion: 8.0.35
      MasterUsername: raisetech_admin
      MasterUserPassword: !Ref DBPassword
      Port: 3306 
      PubliclyAccessible: false
      StorageType: gp2
      DBSubnetGroupName: !Ref DBSubnetGroup
      VPCSecurityGroups:
        - !Ref RdsSecGroup

  Mys3Bucket:
    Type: AWS::S3::Bucket
    Properties: 
      BucketName: mybucket-raisetech-lec10

  MyInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: Lec10
      Roles:
        - !Ref MyRole

  MyRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: Lec10
      AssumeRolePolicyDocument: 
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: "EC2S3FullAccessToRaisetechLec10"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: s3:*
                Resource: "arn:aws:s3:::mybucket-raisetech-lec10/*"